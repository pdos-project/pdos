# This builds PDPCLIB for CMS or MVS using binutils

# Need to disable builtins because an ASCII/EBCDIC issue
# means that it thinks there is no '%' and can use an fputs

# cmsstart.o and cmssupa.o need to be provided separately
# after building on CMS using pdpcms.bat
# (and this will be F80 object code/text)


ifeq "$(targ)" "cms"

CFLAGS=-U__MVS__ -D__CMS__
EXTRA1=--oformat cms
EXTRA2= cmsstart.obj cmssupa.obj


else

CFLAGS=-D__MVS__
EXTRA1=--oformat mvs
EXTRA2= mvsstart.obj mvssupa.obj

endif


#CC=gcc370 -D__FPHACK1__
CC=gccmvs -D__FPHACK1__
#AS=as370 -mebcdic
AS=as370 -mhlasm -mebcdic

COPTS=-S -Os -fno-common $(CFLAGS) \
    -DNOLIBALLOC -D__NOBIVA__ -I . -I../pdpclib -I../src \
    -fno-builtin
AR=ar370
LD=pdld --emit-relocs --entry __CRT0


all: clean pdpclib.a

pdpclib.a: stdio.o string.o stdlib.o \
       start.o time.o errno.o assert.o signal.o locale.o \
       ctype.o setjmp.o math.o pdptest.o
        rm -f pdpclib.a
        $(AR) r pdpclib.a stdio.o string.o stdlib.o
        $(AR) r pdpclib.a start.o time.o errno.o assert.o signal.o
        $(AR) r pdpclib.a locale.o ctype.o setjmp.o math.o
        $(LD) $(EXTRA1) -o pdptest.exe pdptest.o pdpclib.a $(EXTRA2)

.c.o:
        $(CC) $(COPTS) -o $*.s $<
        $(AS) -o $@ $*.s
        rm -f $*.s

.asm.o:
        $(AS) -o $@ $<

clean:
        rm -f pdpclib.a
