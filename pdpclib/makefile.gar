# This builds 64-bit Windows ARM64 (PE/coff) executables
# using a gcc for MacOS that doesn't use the MacOS conventions

# run makek32.gar first

# the compiler was obtained from:
# https://developer.arm.com/downloads/-/arm-gnu-toolchain-downloads
# specifically:
# https://developer.arm.com/-/media/Files/downloads/gnu/13.3.rel1/binrel/arm-gnu-toolchain-13.3.rel1-darwin-arm64-aarch64-none-elf.pkg

# Note that this compiler uses 64-bit long, so there will be
# situations where that is an issue. But a lot of the time
# that is not an issue, given the ARM64 calling convention


CC=aarch64-none-elf-gcc
COPTS=-c -I../src -D__ARM__ -I. -D__WIN32__ -D__PDPCLIB_DLL \
    -DNOUNDMAIN -D__GENSHELL__ -O2 -U__gnu_linux__ \
    -D__64BIT__ -nostdlib -nostdinc \
    -D__NODECLSPEC__ \
    -fno-stack-protector --no-pie

AR=aarch64-none-elf-ar
LD=pdld --no-insert-timestamp
AS=aarch64-none-elf-as


TARGET=pdptest.exe
OBJS=w32start.obj stdio.obj string.obj stdlib.obj start.obj time.obj errno.obj \
    assert.obj signal.obj locale.obj ctype.obj math.obj dllcrt.obj \
    a64supa.obj

$(TARGET): clean pdptest.obj $(OBJS)
  rm -f temp.lib
  $(AR) r temp.lib $(OBJS)
  $(LD) --export-all-symbols -s --no-insert-timestamp -o msvcrt.dll --shared --out-implib msvcrt.lib dllcrt.obj temp.lib ../src/kernel32.lib
  rm -f temp.lib
  $(LD) -s -nostdlib -e mainCRTStartup --no-insert-timestamp -o pdptest.exe w32start.obj pdptest.obj msvcrt.lib

w32start.obj: w32start.c
  $(CC) -o $@ $(COPTS) -U__PDPCLIB_DLL $*.c

pdptest.obj: pdptest.c
  $(CC) -o $@ $(COPTS) -U__PDPCLIB_DLL $*.c

dllcrt.obj: dllcrt.c
  $(CC) -o $@ $(COPTS) -D__EXPORT__ -DNEED_START $*.c

.c.obj:
  $(CC) -o $@ $(COPTS) $<

a64supa.obj: a64supa.asm
  $(AS) -o a64supa.obj a64supa.asm

.asm.obj:
  $(AS) -o $@ $<

clean:
  rm -f *.obj
  rm -f $(TARGET)
