# This builds 64-bit Windows ARM64 (PE/coff) executables
# using Visual C

# run makek32.var first

CC=cl
COPTS=-c -I../src -D__ARM__ -I. -D__WIN32__ -D__PDPCLIB_DLL \
    -DNOUNDMAIN -D__GENSHELL__ -D__MSC__ -nologo -GS- -Za -Zl -O2 -Oi- \
    -D__64BIT__

AR=lib
LD=pdld --no-insert-timestamp
#LD=link
AS=armasm64


TARGET=pdptest.exe
OBJS=w32start.obj stdio.obj string.obj stdlib.obj start.obj time.obj errno.obj \
    assert.obj signal.obj locale.obj ctype.obj math.obj fpfuncsm.obj dllcrt.obj \
    a64supb.obj

$(TARGET): clean pdptest.obj $(OBJS)
  rm -f temp.lib
  $(AR) -nologo -out:temp.lib $(OBJS)
  $(LD) -s --no-insert-timestamp -o msvcrt.dll --shared --out-implib msvcrt.lib dllcrt.obj temp.lib ../src/kernel32.lib
#  $(LD) -nologo -fixed:no -dll -out:msvcrt.dll dllcrt.obj temp.lib ../src/kernel32.lib
  rm -f temp.lib
  $(LD) -s -nostdlib -e mainCRTStartup --no-insert-timestamp -o pdptest.exe w32start.obj pdptest.obj msvcrt.lib
#  $(LD) -nologo -fixed:no -out:pdptest.exe w32start.obj pdptest.obj msvcrt.lib

w32start.obj: w32start.c
  $(CC) $(COPTS) -U__PDPCLIB_DLL $*.c

pdptest.obj: pdptest.c
  $(CC) $(COPTS) -U__PDPCLIB_DLL $*.c

dllcrt.obj: dllcrt.c
  $(CC) $(COPTS) -D__EXPORT__ -DNEED_START $*.c

.c.obj:
  $(CC) $(COPTS) $<

a64supb.obj: a64supb.asm
# we don't need an explicit -16
  $(AS) -nologo -o a64supb.obj a64supb.asm

.asm.obj:
  $(AS) -nologo -o $@ $<

clean:
  rm -f *.obj
  rm -f $(TARGET)
