# Produce Windows executables
# links with PDPCLIB created by makefile.std
# Or makefile.war if using the ARM versions of the tools

VPATH=./hashtab

#CC=gccprm
#CFLAGS=-O0
#AS=asprm
#AR=arprm
#COPTS=-S $(CFLAGS) -fno-common -ansi -I. -I./hashtab -I../pdpclib \
#    -D__WIN32__ -D__ARM__ -msoft-float -mapcs-32 -fno-leading-underscore \
#    -D__USEBIVA__ -DNOFLOAT
#EXTRA=../pdpclib/armsupa.obj ../pdpclib/fpfuncsa.obj ../pdpclib/msvcrt.lib
#EXTRA2=../pdpclib/w32start.obj


CC=gccwin
CFLAGS=-O2
AS=pdas --oformat coff
AR=xar
COPTS=-S $(CFLAGS) -fno-common -ansi -I. -I./hashtab -I../pdpclib -D__WIN32__
EXTRA2=../pdpclib/w32start.obj
EXTRA=../pdpclib/msvcrt.lib


## You need to have run makefile.zpg first
#CC=gcc370
#CFLAGS=-O2
#AS=as370
#AR=ar370
#COPTS=-S $(CFLAGS) -fno-common -ansi -I. -I./hashtab -I../pdpclib -I../generic -I../src -DNOFLOAT -U__MVS__ -D__MF32__ -D__PDOSGEN__ -D__NOBIVA__
#EXTRA2=--oformat mvs -e __crt0 ../pdpclib/pgastart.o

LD=pdld
LDFLAGS=-s --no-insert-timestamp -nostdlib


all: clean pdmake.exe

pdmake.exe: main.obj read.obj rule.obj variable.obj xmalloc.obj hashtab.obj
  $(LD) $(LDFLAGS) -s -o pdmake.exe $(EXTRA2) main.obj read.obj rule.obj variable.obj xmalloc.obj hashtab.obj $(EXTRA)

.c.obj:
  $(CC) $(COPTS) -o $*.s $<
  $(AS) -o $@ $*.s
  rm -f $*.s

clean:
  rm -f *.obj pdmake.exe
